{"ast":null,"code":"module.exports = function (getRequest, apiKey) {\n  return {\n    /**\n     * Find the block reward for a given address and block\n     * @param {string} address - Address of the block\n     * @param {string} blockno - Block number\n     * @returns {Promise.<object>}\n     */\n    getblockreward(address, blockno) {\n      const module = 'block';\n      const action = 'getblockreward';\n      if (!blockno) {\n        blockno = 0;\n      }\n      const queryObject = {\n        module,\n        action,\n        address,\n        blockno,\n        apiKey\n      };\n      var query = new URLSearchParams(queryObject).toString();\n      return getRequest(query);\n    }\n  };\n};","map":{"version":3,"names":["module","exports","getRequest","apiKey","getblockreward","address","blockno","action","queryObject","query","URLSearchParams","toString"],"sources":["/home/ali/Documents/run_prj/happysnake/node_modules/etherscan-api/lib/block.js"],"sourcesContent":["module.exports = function(getRequest, apiKey) {\n  return {\n    /**\n     * Find the block reward for a given address and block\n     * @param {string} address - Address of the block\n     * @param {string} blockno - Block number\n     * @returns {Promise.<object>}\n     */\n    getblockreward(address, blockno) {\n      const module = 'block';\n      const action = 'getblockreward';\n      if (!blockno) {\n        blockno = 0;\n      }      \n      const queryObject = {\n        module, action, address, blockno, apiKey\n      };\n      var query = new URLSearchParams(queryObject).toString();\n      return getRequest(query);\n    }\n  };\n};\n"],"mappings":"AAAAA,MAAM,CAACC,OAAO,GAAG,UAASC,UAAU,EAAEC,MAAM,EAAE;EAC5C,OAAO;IACL;AACJ;AACA;AACA;AACA;AACA;IACIC,cAAcA,CAACC,OAAO,EAAEC,OAAO,EAAE;MAC/B,MAAMN,MAAM,GAAG,OAAO;MACtB,MAAMO,MAAM,GAAG,gBAAgB;MAC/B,IAAI,CAACD,OAAO,EAAE;QACZA,OAAO,GAAG,CAAC;MACb;MACA,MAAME,WAAW,GAAG;QAClBR,MAAM;QAAEO,MAAM;QAAEF,OAAO;QAAEC,OAAO;QAAEH;MACpC,CAAC;MACD,IAAIM,KAAK,GAAG,IAAIC,eAAe,CAACF,WAAW,CAAC,CAACG,QAAQ,CAAC,CAAC;MACvD,OAAOT,UAAU,CAACO,KAAK,CAAC;IAC1B;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}