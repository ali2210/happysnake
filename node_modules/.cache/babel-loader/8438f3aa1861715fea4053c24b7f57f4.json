{"ast":null,"code":"import _classCallCheck from \"/home/ali/Documents/run_prj/happysnake/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ali/Documents/run_prj/happysnake/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ali/Documents/run_prj/happysnake/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ali/Documents/run_prj/happysnake/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ali/Documents/run_prj/happysnake/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n// Use the encode-latin.js script to create the necessary\n// data files to be consumed by this class\nimport { id } from \"../hash/index.js\";\nimport { assertArgument } from \"../utils/index.js\";\nimport { decodeOwl } from \"./decode-owl.js\";\nimport { Wordlist } from \"./wordlist.js\";\n/**\n *  An OWL format Wordlist is an encoding method that exploits\n *  the general locality of alphabetically sorted words to\n *  achieve a simple but effective means of compression.\n *\n *  This class is generally not useful to most developers as\n *  it is used mainly internally to keep Wordlists for languages\n *  based on ASCII-7 small.\n *\n *  If necessary, there are tools within the ``generation/`` folder\n *  to create the necessary data.\n */\nexport var WordlistOwl = /*#__PURE__*/function (_Wordlist) {\n  _inherits(WordlistOwl, _Wordlist);\n  /**\n   *  Creates a new Wordlist for %%locale%% using the OWL %%data%%\n   *  and validated against the %%checksum%%.\n   */\n  function WordlistOwl(locale, data, checksum) {\n    var _this;\n    _classCallCheck(this, WordlistOwl);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WordlistOwl).call(this, locale));\n    _this.#data = data;\n    _this.#checksum = checksum;\n    _this.#words = null;\n    return _this;\n  }\n  /**\n   *  The OWL-encoded data.\n   */\n  _createClass(WordlistOwl, [{\n    key: \"_decodeWords\",\n    /**\n     *  Decode all the words for the wordlist.\n     */\n    value: function _decodeWords() {\n      return decodeOwl(this.#data);\n    }\n  }, {\n    key: \"getWord\",\n    value: function getWord(index) {\n      var words = this.#loadWords();\n      assertArgument(index >= 0 && index < words.length, \"invalid word index: \".concat(index), \"index\", index);\n      return words[index];\n    }\n  }, {\n    key: \"getWordIndex\",\n    value: function getWordIndex(word) {\n      return this.#loadWords().indexOf(word);\n    }\n  }, {\n    key: \"_data\",\n    get: function get() {\n      return this.#data;\n    }\n  }]);\n  return WordlistOwl;\n}(Wordlist);","map":null,"metadata":{},"sourceType":"module"}