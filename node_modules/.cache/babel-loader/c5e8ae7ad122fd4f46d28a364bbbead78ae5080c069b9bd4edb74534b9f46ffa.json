{"ast":null,"code":"'use strict';\n\nvar _ = require('lodash');\nvar ColumnNode = require('./node/column');\nvar OrderByValueNode = require('./node/orderByValue');\nvar TextNode = require('./node/text');\nvar valueExpressionMixin = require('./node/valueExpression');\nvar Column = function (config) {\n  this.table = config.table;\n  for (var name in config) {\n    if (config.hasOwnProperty(name)) {\n      this[name] = config[name];\n    }\n  }\n  this.asc = this.ascending = this;\n  this.alias = null;\n  this.desc = this.descending = new OrderByValueNode({\n    value: this.toNode(),\n    direction: new TextNode('DESC')\n  });\n  this.dataType = config.dataType;\n  this.defaultValue = config.defaultValue;\n};\n\n// mix in value expression\n_.extend(Column.prototype, valueExpressionMixin());\nvar contextify = function (base) {\n  var context = Object.create(Column.prototype);\n  Object.keys(base).forEach(function (key) {\n    context[key] = base[key];\n  });\n  return context;\n};\nColumn.prototype.value = function (value) {\n  var context = contextify(this);\n  context._value = value;\n  return context;\n};\nColumn.prototype.getValue = function () {\n  return this._value;\n};\nColumn.prototype.toNode = function () {\n  // creates a query node from this column\n  return new ColumnNode(contextify(this));\n};\nColumn.prototype.as = function (alias) {\n  var context = contextify(this);\n  context.alias = alias;\n  return new ColumnNode(context);\n};\nColumn.prototype.arrayAgg = function (alias) {\n  var context = contextify(this);\n  context.asArray = true;\n  context.alias = alias || context.name + 's';\n  return new ColumnNode(context);\n};\nColumn.prototype.aggregate = function (alias, aggregator) {\n  var context = contextify(this);\n  context.aggregator = aggregator.toUpperCase();\n  context.alias = alias || context.name + '_' + context.aggregator.toLowerCase();\n  return new ColumnNode(context);\n};\nColumn.prototype.count = function (alias) {\n  return this.aggregate(alias, 'count');\n};\nColumn.prototype.min = function (alias) {\n  return this.aggregate(alias, 'min');\n};\nColumn.prototype.max = function (alias) {\n  return this.aggregate(alias, 'max');\n};\nColumn.prototype.sum = function (alias) {\n  return this.aggregate(alias, 'sum');\n};\nColumn.prototype.avg = function (alias) {\n  return this.aggregate(alias, 'avg');\n};\nColumn.prototype.distinct = function () {\n  var context = contextify(this);\n  context.distinct = true;\n  return new ColumnNode(context);\n};\nColumn.prototype.toQuery = function () {\n  return this.toNode().toQuery();\n};\nmodule.exports = Column;","map":{"version":3,"names":["_","require","ColumnNode","OrderByValueNode","TextNode","valueExpressionMixin","Column","config","table","name","hasOwnProperty","asc","ascending","alias","desc","descending","value","toNode","direction","dataType","defaultValue","extend","prototype","contextify","base","context","Object","create","keys","forEach","key","_value","getValue","as","arrayAgg","asArray","aggregate","aggregator","toUpperCase","toLowerCase","count","min","max","sum","avg","distinct","toQuery","module","exports"],"sources":["/home/ali/Documents/run_prj/happysnake/node_modules/sql/lib/column.js"],"sourcesContent":["'use strict';\n\nvar _                    = require('lodash');\nvar ColumnNode           = require('./node/column');\nvar OrderByValueNode     = require('./node/orderByValue');\nvar TextNode             = require('./node/text');\nvar valueExpressionMixin = require('./node/valueExpression');\n\nvar Column = function(config) {\n  this.table = config.table;\n  for (var name in config) {\n    if (config.hasOwnProperty(name)) {\n      this[name] = config[name];\n    }\n  }\n  this.asc = this.ascending = this;\n  this.alias = null;\n  this.desc = this.descending = new OrderByValueNode({\n    value     : this.toNode(),\n    direction : new TextNode('DESC')\n  });\n  this.dataType = config.dataType;\n  this.defaultValue = config.defaultValue;\n};\n\n// mix in value expression\n_.extend(Column.prototype, valueExpressionMixin());\n\nvar contextify = function(base) {\n  var context = Object.create(Column.prototype);\n  Object.keys(base).forEach(function (key) {\n    context[key] = base[key];\n  });\n  return context;\n};\n\nColumn.prototype.value = function(value) {\n  var context = contextify(this);\n  context._value = value;\n  return context;\n};\n\nColumn.prototype.getValue = function() {\n  return this._value;\n};\n\nColumn.prototype.toNode = function() {\n  // creates a query node from this column\n  return new ColumnNode(contextify(this));\n};\n\nColumn.prototype.as = function(alias) {\n  var context = contextify(this);\n  context.alias = alias;\n  return new ColumnNode(context);\n};\n\nColumn.prototype.arrayAgg = function(alias) {\n  var context = contextify(this);\n  context.asArray = true;\n  context.alias = alias || context.name + 's';\n  return new ColumnNode(context);\n};\n\nColumn.prototype.aggregate = function(alias, aggregator) {\n  var context = contextify(this);\n  context.aggregator = aggregator.toUpperCase();\n  context.alias = alias || context.name + '_' + context.aggregator.toLowerCase();\n  return new ColumnNode(context);\n};\n\nColumn.prototype.count = function(alias) {\n  return this.aggregate(alias, 'count');\n};\n\nColumn.prototype.min = function(alias) {\n  return this.aggregate(alias, 'min');\n};\n\nColumn.prototype.max = function(alias) {\n  return this.aggregate(alias, 'max');\n};\n\nColumn.prototype.sum = function(alias) {\n  return this.aggregate(alias, 'sum');\n};\n\nColumn.prototype.avg = function(alias) {\n  return this.aggregate(alias, 'avg');\n};\n\nColumn.prototype.distinct = function() {\n  var context = contextify(this);\n  context.distinct = true;\n  return new ColumnNode(context);\n};\n\nColumn.prototype.toQuery = function() {\n  return this.toNode().toQuery();\n};\n\nmodule.exports = Column;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}