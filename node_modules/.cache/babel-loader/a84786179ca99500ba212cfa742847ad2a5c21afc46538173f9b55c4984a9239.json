{"ast":null,"code":"'use strict';\n\nvar _ = require('lodash');\nvar Node = require('./index');\nvar valueExpressionMixin = require('./valueExpression');\nvar valueExpressionMixed = false;\nvar TernaryNode = Node.define(_.extend({\n  type: 'TERNARY',\n  constructor: function (config) {\n    Node.call(this);\n    this.left = config.left;\n    this.middle = config.middle;\n    this.operator = config.operator;\n    this.right = config.right;\n    this.separator = config.separator;\n\n    // Delay mixin to runtime, when all nodes have been defined, and\n    // mixin only once. ValueExpressionMixin has circular dependencies.\n    if (!valueExpressionMixed) {\n      valueExpressionMixed = true;\n      _.extend(TernaryNode.prototype, valueExpressionMixin());\n    }\n  }\n}));\n\n// allow aliasing\nvar AliasNode = require('./alias');\n_.extend(TernaryNode.prototype, AliasNode.AliasMixin);\nmodule.exports = TernaryNode;","map":{"version":3,"names":["_","require","Node","valueExpressionMixin","valueExpressionMixed","TernaryNode","define","extend","type","constructor","config","call","left","middle","operator","right","separator","prototype","AliasNode","AliasMixin","module","exports"],"sources":["/home/ali/Documents/run_prj/happysnake/node_modules/sql/lib/node/ternary.js"],"sourcesContent":["'use strict';\n\nvar _                    = require('lodash');\nvar Node                 = require('./index');\nvar valueExpressionMixin = require('./valueExpression');\n\nvar valueExpressionMixed = false;\nvar TernaryNode = Node.define(_.extend({\n  type: 'TERNARY',\n  constructor: function(config) {\n    Node.call(this);\n    this.left = config.left;\n    this.middle = config.middle;\n    this.operator = config.operator;\n    this.right = config.right;\n    this.separator = config.separator;\n\n    // Delay mixin to runtime, when all nodes have been defined, and\n    // mixin only once. ValueExpressionMixin has circular dependencies.\n    if (!valueExpressionMixed) {\n      valueExpressionMixed = true;\n      _.extend(TernaryNode.prototype, valueExpressionMixin());\n    }\n  },\n}));\n\n// allow aliasing\nvar AliasNode = require('./alias');\n_.extend(TernaryNode.prototype, AliasNode.AliasMixin);\n\nmodule.exports = TernaryNode;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,CAAC,GAAsBC,OAAO,CAAC,QAAQ,CAAC;AAC5C,IAAIC,IAAI,GAAmBD,OAAO,CAAC,SAAS,CAAC;AAC7C,IAAIE,oBAAoB,GAAGF,OAAO,CAAC,mBAAmB,CAAC;AAEvD,IAAIG,oBAAoB,GAAG,KAAK;AAChC,IAAIC,WAAW,GAAGH,IAAI,CAACI,MAAM,CAACN,CAAC,CAACO,MAAM,CAAC;EACrCC,IAAI,EAAE,SAAS;EACfC,WAAW,EAAE,SAAAA,CAASC,MAAM,EAAE;IAC5BR,IAAI,CAACS,IAAI,CAAC,IAAI,CAAC;IACf,IAAI,CAACC,IAAI,GAAGF,MAAM,CAACE,IAAI;IACvB,IAAI,CAACC,MAAM,GAAGH,MAAM,CAACG,MAAM;IAC3B,IAAI,CAACC,QAAQ,GAAGJ,MAAM,CAACI,QAAQ;IAC/B,IAAI,CAACC,KAAK,GAAGL,MAAM,CAACK,KAAK;IACzB,IAAI,CAACC,SAAS,GAAGN,MAAM,CAACM,SAAS;;IAEjC;IACA;IACA,IAAI,CAACZ,oBAAoB,EAAE;MACzBA,oBAAoB,GAAG,IAAI;MAC3BJ,CAAC,CAACO,MAAM,CAACF,WAAW,CAACY,SAAS,EAAEd,oBAAoB,CAAC,CAAC,CAAC;IACzD;EACF;AACF,CAAC,CAAC,CAAC;;AAEH;AACA,IAAIe,SAAS,GAAGjB,OAAO,CAAC,SAAS,CAAC;AAClCD,CAAC,CAACO,MAAM,CAACF,WAAW,CAACY,SAAS,EAAEC,SAAS,CAACC,UAAU,CAAC;AAErDC,MAAM,CAACC,OAAO,GAAGhB,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}