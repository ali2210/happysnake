{"ast":null,"code":"'use strict';\n\nvar Node = require('./index');\nvar ParameterNode = module.exports = Node.define({\n  type: 'PARAMETER',\n  constructor: function (val) {\n    Node.call(this);\n    this._val = val;\n    this.isExplicit = false;\n  },\n  value: function () {\n    return this._val;\n  }\n});\n\n// wrap a value as a parameter node if value is not already a node\nmodule.exports.getNodeOrParameterNode = function (value) {\n  if (value && value.toNode) {\n    // use toNode\n    return value.toNode();\n  } else {\n    // wrap as parameter node\n    return new ParameterNode(value);\n  }\n};","map":{"version":3,"names":["Node","require","ParameterNode","module","exports","define","type","constructor","val","call","_val","isExplicit","value","getNodeOrParameterNode","toNode"],"sources":["/home/ali/Documents/run_prj/happysnake/node_modules/sql/lib/node/parameter.js"],"sourcesContent":["'use strict';\n\nvar Node = require('./index');\n\nvar ParameterNode = module.exports = Node.define({\n  type: 'PARAMETER',\n  constructor: function(val) {\n    Node.call(this);\n    this._val = val;\n    this.isExplicit = false;\n  },\n  value: function() {\n    return this._val;\n  }\n});\n\n// wrap a value as a parameter node if value is not already a node\nmodule.exports.getNodeOrParameterNode = function(value) {\n  if (value && value.toNode) {\n    // use toNode\n    return value.toNode();\n  } else {\n    // wrap as parameter node\n    return new ParameterNode(value);\n  }\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,SAAS,CAAC;AAE7B,IAAIC,aAAa,GAAGC,MAAM,CAACC,OAAO,GAAGJ,IAAI,CAACK,MAAM,CAAC;EAC/CC,IAAI,EAAE,WAAW;EACjBC,WAAW,EAAE,SAAAA,CAASC,GAAG,EAAE;IACzBR,IAAI,CAACS,IAAI,CAAC,IAAI,CAAC;IACf,IAAI,CAACC,IAAI,GAAGF,GAAG;IACf,IAAI,CAACG,UAAU,GAAG,KAAK;EACzB,CAAC;EACDC,KAAK,EAAE,SAAAA,CAAA,EAAW;IAChB,OAAO,IAAI,CAACF,IAAI;EAClB;AACF,CAAC,CAAC;;AAEF;AACAP,MAAM,CAACC,OAAO,CAACS,sBAAsB,GAAG,UAASD,KAAK,EAAE;EACtD,IAAIA,KAAK,IAAIA,KAAK,CAACE,MAAM,EAAE;IACzB;IACA,OAAOF,KAAK,CAACE,MAAM,CAAC,CAAC;EACvB,CAAC,MAAM;IACL;IACA,OAAO,IAAIZ,aAAa,CAACU,KAAK,CAAC;EACjC;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}