{"ast":null,"code":"'use strict';\n\nvar Node = require('./');\nmodule.exports = Node.define({\n  type: 'DROP INDEX',\n  constructor: function (table, indexName) {\n    if (!indexName) {\n      throw new Error('No index defined!');\n    } else if (Array.isArray(indexName) && typeof indexName[0] === 'string') {\n      indexName = indexName[0];\n    } else if (Array.isArray(indexName)) {\n      var columns = indexName.map(function (col) {\n        return col.name;\n      }).sort();\n      indexName = [table._name].concat(columns).join('_');\n    }\n    Node.call(this);\n    this.table = table;\n    this.options = {\n      indexName: indexName\n    };\n  },\n  indexName: function () {\n    var result = this.options.indexName;\n    if (!result) {\n      var columns = this.options.columns.map(function (col) {\n        return col.name;\n      }).sort();\n      result = [this.table._name];\n      result = result.concat(columns);\n      result = result.join('_');\n    }\n    return result;\n  }\n});","map":{"version":3,"names":["Node","require","module","exports","define","type","constructor","table","indexName","Error","Array","isArray","columns","map","col","name","sort","_name","concat","join","call","options","result"],"sources":["/home/ali/Documents/run_prj/happysnake/node_modules/sql/lib/node/dropIndex.js"],"sourcesContent":["'use strict';\n\nvar Node = require('./');\n\nmodule.exports = Node.define({\n  type: 'DROP INDEX',\n\n  constructor: function(table, indexName) {\n    if (!indexName) {\n      throw new Error('No index defined!');\n    } else if (Array.isArray(indexName) && (typeof indexName[0] === 'string')) {\n      indexName = indexName[0];\n    } else if (Array.isArray(indexName)) {\n      var columns = indexName.map(function(col) { return col.name; }).sort();\n      indexName = [table._name].concat(columns).join('_');\n    }\n\n    Node.call(this);\n\n    this.table   = table;\n    this.options = { indexName: indexName };\n  },\n\n  indexName: function() {\n    var result = this.options.indexName;\n\n    if (!result) {\n      var columns = this.options.columns.map(function(col) {\n        return col.name;\n      }).sort();\n\n      result = [this.table._name];\n      result = result.concat(columns);\n      result = result.join('_');\n    }\n\n    return result;\n  }\n});\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,IAAI,CAAC;AAExBC,MAAM,CAACC,OAAO,GAAGH,IAAI,CAACI,MAAM,CAAC;EAC3BC,IAAI,EAAE,YAAY;EAElBC,WAAW,EAAE,SAAAA,CAASC,KAAK,EAAEC,SAAS,EAAE;IACtC,IAAI,CAACA,SAAS,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,mBAAmB,CAAC;IACtC,CAAC,MAAM,IAAIC,KAAK,CAACC,OAAO,CAACH,SAAS,CAAC,IAAK,OAAOA,SAAS,CAAC,CAAC,CAAC,KAAK,QAAS,EAAE;MACzEA,SAAS,GAAGA,SAAS,CAAC,CAAC,CAAC;IAC1B,CAAC,MAAM,IAAIE,KAAK,CAACC,OAAO,CAACH,SAAS,CAAC,EAAE;MACnC,IAAII,OAAO,GAAGJ,SAAS,CAACK,GAAG,CAAC,UAASC,GAAG,EAAE;QAAE,OAAOA,GAAG,CAACC,IAAI;MAAE,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;MACtER,SAAS,GAAG,CAACD,KAAK,CAACU,KAAK,CAAC,CAACC,MAAM,CAACN,OAAO,CAAC,CAACO,IAAI,CAAC,GAAG,CAAC;IACrD;IAEAnB,IAAI,CAACoB,IAAI,CAAC,IAAI,CAAC;IAEf,IAAI,CAACb,KAAK,GAAKA,KAAK;IACpB,IAAI,CAACc,OAAO,GAAG;MAAEb,SAAS,EAAEA;IAAU,CAAC;EACzC,CAAC;EAEDA,SAAS,EAAE,SAAAA,CAAA,EAAW;IACpB,IAAIc,MAAM,GAAG,IAAI,CAACD,OAAO,CAACb,SAAS;IAEnC,IAAI,CAACc,MAAM,EAAE;MACX,IAAIV,OAAO,GAAG,IAAI,CAACS,OAAO,CAACT,OAAO,CAACC,GAAG,CAAC,UAASC,GAAG,EAAE;QACnD,OAAOA,GAAG,CAACC,IAAI;MACjB,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;MAETM,MAAM,GAAG,CAAC,IAAI,CAACf,KAAK,CAACU,KAAK,CAAC;MAC3BK,MAAM,GAAGA,MAAM,CAACJ,MAAM,CAACN,OAAO,CAAC;MAC/BU,MAAM,GAAGA,MAAM,CAACH,IAAI,CAAC,GAAG,CAAC;IAC3B;IAEA,OAAOG,MAAM;EACf;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}