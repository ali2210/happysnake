{"ast":null,"code":"'use strict';\n\nvar Node = require('./index');\nvar BinaryNode = require('./binary');\nvar TextNode = require('./text');\nvar normalizeNode = function (table, node) {\n  var result = node;\n  if (typeof node === 'string') {\n    result = new TextNode('(' + node + ')');\n  } else if (Array.isArray(node)) {\n    result = false;\n    if (node.length === 0) {\n      result = new TextNode('(1 = 1)');\n    } else {\n      node.forEach(function (subNode) {\n        if (!result) {\n          result = subNode;\n        } else {\n          result = result.and(subNode);\n        }\n      });\n    }\n  } else if (!node.toNode && typeof node === 'object') {\n    result = false;\n    for (var colName in node) {\n      if (node.hasOwnProperty(colName)) {\n        var column = table.getColumn(colName);\n        var query = column.equals(node[colName]);\n        if (!result) {\n          result = query;\n        } else {\n          result = result.and(query);\n        }\n      }\n    }\n  }\n  return result;\n};\nmodule.exports = Node.define({\n  constructor: function (table) {\n    Node.call(this);\n    this.table = table;\n  },\n  type: 'WHERE',\n  add: function (node) {\n    node = normalizeNode(this.table, node);\n    return Node.prototype.add.call(this, node);\n  },\n  or: function (other) {\n    var right = normalizeNode(this.table, other);\n    // calling 'or' without an initial 'where'\n    if (!this.nodes.length) {\n      return this.add(other);\n    }\n    return this.nodes.push(new BinaryNode({\n      left: this.nodes.pop(),\n      operator: 'OR',\n      right: right\n    }));\n  },\n  and: function (other) {\n    var right = normalizeNode(this.table, other);\n    return this.nodes.push(new BinaryNode({\n      left: this.nodes.pop(),\n      operator: 'AND',\n      right: right\n    }));\n  }\n});","map":{"version":3,"names":["Node","require","BinaryNode","TextNode","normalizeNode","table","node","result","Array","isArray","length","forEach","subNode","and","toNode","colName","hasOwnProperty","column","getColumn","query","equals","module","exports","define","constructor","call","type","add","prototype","or","other","right","nodes","push","left","pop","operator"],"sources":["/home/ali/Documents/run_prj/happysnake/node_modules/sql/lib/node/where.js"],"sourcesContent":["'use strict';\n\nvar Node = require('./index');\nvar BinaryNode = require('./binary');\nvar TextNode = require('./text');\n\nvar normalizeNode = function(table, node) {\n  var result = node;\n  if(typeof node === 'string') {\n    result = new TextNode('(' + node + ')');\n  }\n  else if (Array.isArray(node)) {\n    result = false;\n\n    if (node.length === 0) {\n      result = new TextNode('(1 = 1)');\n    } else {\n      node.forEach(function (subNode) {\n        if (!result) {\n          result = subNode;\n        } else {\n          result = result.and(subNode);\n        }\n      });\n    }\n  }\n  else if (!node.toNode && typeof node === 'object'){\n    result = false;\n    for (var colName in node) {\n      if (node.hasOwnProperty(colName)) {\n        var column = table.getColumn(colName);\n        var query = column.equals(node[colName]);\n        if (!result) {\n          result = query;\n        } else {\n          result = result.and(query);\n        }\n      }\n    }\n  }\n  return result;\n};\n\nmodule.exports = Node.define({\n  constructor: function(table) {\n    Node.call(this);\n    this.table = table;\n  },\n  type: 'WHERE',\n  add: function(node) {\n    node = normalizeNode(this.table, node);\n    return Node.prototype.add.call(this, node);\n  },\n  or: function(other) {\n    var right = normalizeNode(this.table, other);\n    // calling 'or' without an initial 'where'\n    if(!this.nodes.length) {\n      return this.add(other);\n    }\n    return this.nodes.push(new BinaryNode({\n      left: this.nodes.pop(),\n      operator: 'OR',\n      right: right\n    }));\n  },\n  and: function(other) {\n    var right = normalizeNode(this.table, other);\n    return this.nodes.push(new BinaryNode({\n      left: this.nodes.pop(),\n      operator: 'AND',\n      right: right\n    }));\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}